openapi: 3.0.3
info:
  title: Company contacts
  version: 1.0.0
paths:
  /contacts:
    post:
      tags:
        - Contacts
      summary: Create a contact
      description: Create a contact
      operationId: createContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          description: Invalid contact
    get:
      tags:
        - Contacts
      summary: Get all contacts
      description: Get all contacts
      operationId: listContacts
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
  /contacts/{id}:
    put:
      tags:
        - Contacts
      summary: Update a contact
      description: Update a contact
      operationId: updateContact
      parameters:
        - name: id
          in: path
          description: ID of contact
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          description: Invalid contact
        '404':
          description: Contact not found
    delete:
      tags:
        - Contacts
      summary: Delete a contact
      description: Delete a contact
      operationId: deleteContact
      parameters:
        - name: id
          in: path
          description: ID of contact
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successful operation
        '404':
          description: Contact not found
  /companies:
    post:
      tags:
        - Companies
      summary: Create a company
      description: Create a company
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: Invalid company
    get:
      tags:
        - Companies
      summary: Get all companies
      description: Get all companies
      operationId: listCompanies
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
  /companies/{id}:
    put:
      tags:
        - Companies
      summary: Update a company
      description: Update a company
      operationId: updateCompany
      parameters:
        - name: id
          in: path
          description: ID of company
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: Invalid company
        '404':
          description: Company not found
  /companies/{number}:
    get:
      tags:
        - Companies
      summary: Get company by number
      description: Get company by number
      operationId: getCompanyByNumber
      parameters:
        - name: number
          in: path
          description: Number of company
          required: true
          schema:
            type: string
            pattern: '^\d{10}$'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Company not found
  /companies/{companyId}/contacts/{contactId}:
    post:
      tags:
        - Companies
      summary: Add a contact to a company
      description: Add a contact to a company
      operationId: contactToCompany
      parameters:
        - name: companyId
          in: path
          description: ID of company
          required: true
          schema:
            type: integer
        - name: contactId
          in: path
          description: ID of contact
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
        '404':
          description: Invalid company or invalid contact
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
        number:
          type: string
        box:
          type: string
        city:
          type: string
        zip:
          type: string
      required:
        - street
        - number
        - city
        - zip
    Company:
      type: object
      properties:
        id:
          type: integer
        address:
          $ref: '#/components/schemas/Address'
        number:
          type: string
          pattern: '^\d{10}$'
      required:
        - address
        - number
    Contact:
      type: object
      properties:
        id:
          type: integer
        address:
          $ref: '#/components/schemas/Address'
        lastName:
          type: string
        firstName:
          type: string
        isFreelance:
          type: boolean
        number:
          type: string
          pattern: '^\d{10}$'
        companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
      required:
        - address
        - lastName
        - firstName
        - isFreelance